@using LearningSystem.Web.Infrastructure.Extensions
@model ArticlesListingViewModel
@{
    ViewData["Title"] = "Articles";
    var previousDisabled = this.Model.CurrentPage == 1
        ? "disabled"
        : String.Empty;
    var nextDisabled = this.Model.CurrentPage == this.Model.TotalPages
        ? "disabled"
        : String.Empty;
}

<h3 class="text-center"><strong>@ViewData["Title"]</strong></h3>
<br/>
<div class="row">
    <div class="col-md-12">
        <form asp-action="Index">
            <div class="col-md-10 nopadding">
                <input asp-for="SearchTerm" class="form-control" placeholder="Content and Title.." />
            </div>
            <div class="col-md-1 pull-right nopadding">
                <input type="submit" class="form-control btn-sm btn-primary" value="Search" />
            </div>
        </form>
    </div>
</div>
<br/>
@if (!string.IsNullOrEmpty(@Model.SearchTerm))
{
    <h4>Search results for "@Model.SearchTerm".</h4>
}
<div class="row">
    <div class="col-md-12">
        <table class="table table-bordered table-hover">
            <thead>
            <tr>
                <th class="col-md-7">Title</th>
                <th class="col-md-3">Author</th>
                <th class="col-md-2">Publish Date</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var article in @Model.Articles)
            {
                <tr>
                    <td>
                        <a asp-action="Details"
                           asp-route-id="@article.Id"
                           asp-route-title="@article.Title.ToFriendlyUrl()">@article.Title</a>
                    </td>
                    <td>@article.Author</td>
                    <td>@article.PublishDate.ToLocalTime()</td>
                </tr>
            }
            </tbody>
        </table>
        <ul class="pagination">
            <li class="page-item @previousDisabled">
                <a asp-area="Blog"
                   asp-controller="Articles"
                   asp-action="Index"
                   asp-route-page="@Model.PreviousPage">
                    Previous
                </a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {

                var currentActive = Model.CurrentPage == i ? "active" : String.Empty;

                <li class="page-item @currentActive">
                    <a asp-area="Blog"
                       asp-controller="Articles"
                       asp-action="Index"
                       asp-route-page="@i">@i</a>
                </li>
            }

            <li class="page-item @nextDisabled">
                <a asp-area="Blog"
                   asp-controller="Articles"
                   asp-action="Index"
                   asp-route-page="@Model.NextPage">Next</a>
            </li>
        </ul>
    </div>
</div>
